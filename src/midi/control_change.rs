#[derive(Debug, PartialEq, Clone, Copy)]
pub enum CC {
    ModWheel(u8),
    VelocityCurve(u8),
    PitchBendRange(u8),
    Volume(u8),
    Balance(u8),
    SubOscillatorShapeParameter1(u8),
    SubOscillatorShapeParameter2(u8),
    Oscillator1ShapeParameter1(u8),
    Oscillator1ShapeParameter2(u8),
    Oscillator2ShapeParameter1(u8),
    Oscillator2ShapeParameter2(u8),
    Oscillator3ShapeParameter1(u8),
    Oscillator3ShapeParameter2(u8),
    OscillatorKeySyncEnabled(u8),
    PortamentoTime(u8),
    OscillatorHardSync(u8),
    SubOscillatorShape(u8),
    Oscillator1Shape(u8),
    Oscillator2Shape(u8),
    Oscillator3Shape(u8),
    SubOscillatorCourseTune(u8),
    Oscillator1CourseTune(u8),
    Oscillator2CourseTune(u8),
    Oscillator3CourseTune(u8),
    SubOscillatorFineTune(u8),
    Oscillator1FineTune(u8),
    Oscillator2FineTune(u8),
    Oscillator3FineTune(u8),
    SubOscillatorLevel(u8),
    Oscillator1Level(u8),
    Oscillator2Level(u8),
    Oscillator3Level(u8),
    SubOscillatorMute(u8),
    Oscillator1Mute(u8),
    Oscillator2Mute(u8),
    Oscillator3Mute(u8),
    SubOscillatorBalance(u8),
    Oscillator1Balance(u8),
    Oscillator2Balance(u8),
    Oscillator3Balance(u8),
    PortamentoEnabled(u8),
    FilterPoles(u8),
    FilterResonance(u8),
    FilterCutoff(u8),
    AmpEGReleaseTime(u8),
    AmpEGAttackTime(u8),
    AmpEGDecayTime(u8),
    AmpEGSustainLevel(u8),
    AmpEGInverted(u8),
    FilterEGAttackTime(u8),
    FilterEGDecayTime(u8),
    FilterEGSustainLevel(u8),
    FilterEGReleaseTime(u8),
    FilterEGInverted(u8),
    FilterEGAmount(u8),
    KeyTrackingAmount(u8),
    LFO1Frequency(u8),
    LFO1CenterValue(u8),
    LFO1Range(u8),
    LFO1WaveShape(u8),
    LFO1Phase(u8),
    LFO1Reset,
    FilterModLFOFrequency(u8),
    FilterModLFOAmount(u8),
    FilterModLFOWaveShape(u8),
    FilterModLFOPhase(u8),
    FilterModLFOReset,
    AllNotesOff,
}

pub fn get_supported_cc_from_cc_number(cc_number: u8, cc_value: u8) -> Option<CC> {
    match cc_number {
        1 => Some(CC::ModWheel(cc_value)),
        3 => Some(CC::VelocityCurve(cc_value)),
        5 => Some(CC::PitchBendRange(cc_value)),
        7 => Some(CC::Volume(cc_value)),
        10 => Some(CC::Balance(cc_value)),
        12 => Some(CC::SubOscillatorShapeParameter1(cc_value)),
        13 => Some(CC::SubOscillatorShapeParameter2(cc_value)),
        14 => Some(CC::Oscillator1ShapeParameter1(cc_value)),
        15 => Some(CC::Oscillator1ShapeParameter2(cc_value)),
        16 => Some(CC::Oscillator2ShapeParameter1(cc_value)),
        17 => Some(CC::Oscillator2ShapeParameter2(cc_value)),
        18 => Some(CC::Oscillator3ShapeParameter1(cc_value)),
        19 => Some(CC::Oscillator3ShapeParameter2(cc_value)),
        20 => Some(CC::OscillatorKeySyncEnabled(cc_value)),
        37 => Some(CC::PortamentoTime(cc_value)),
        38 => Some(CC::OscillatorHardSync(cc_value)),
        40 => Some(CC::SubOscillatorShape(cc_value)),
        41 => Some(CC::Oscillator1Shape(cc_value)),
        42 => Some(CC::Oscillator2Shape(cc_value)),
        43 => Some(CC::Oscillator3Shape(cc_value)),
        44 => Some(CC::SubOscillatorCourseTune(cc_value)),
        45 => Some(CC::Oscillator1CourseTune(cc_value)),
        46 => Some(CC::Oscillator2CourseTune(cc_value)),
        47 => Some(CC::Oscillator3CourseTune(cc_value)),
        48 => Some(CC::SubOscillatorFineTune(cc_value)),
        49 => Some(CC::Oscillator1FineTune(cc_value)),
        50 => Some(CC::Oscillator2FineTune(cc_value)),
        51 => Some(CC::Oscillator3FineTune(cc_value)),
        52 => Some(CC::SubOscillatorLevel(cc_value)),
        53 => Some(CC::Oscillator1Level(cc_value)),
        54 => Some(CC::Oscillator2Level(cc_value)),
        55 => Some(CC::Oscillator3Level(cc_value)),
        56 => Some(CC::SubOscillatorMute(cc_value)),
        57 => Some(CC::Oscillator1Mute(cc_value)),
        58 => Some(CC::Oscillator2Mute(cc_value)),
        59 => Some(CC::Oscillator3Mute(cc_value)),
        60 => Some(CC::SubOscillatorBalance(cc_value)),
        61 => Some(CC::Oscillator1Balance(cc_value)),
        62 => Some(CC::Oscillator2Balance(cc_value)),
        63 => Some(CC::Oscillator3Balance(cc_value)),
        65 => Some(CC::PortamentoEnabled(cc_value)),
        70 => Some(CC::FilterPoles(cc_value)),
        71 => Some(CC::FilterResonance(cc_value)),
        72 => Some(CC::AmpEGReleaseTime(cc_value)),
        73 => Some(CC::AmpEGAttackTime(cc_value)),
        74 => Some(CC::FilterCutoff(cc_value)),
        75 => Some(CC::AmpEGDecayTime(cc_value)),
        79 => Some(CC::AmpEGSustainLevel(cc_value)),
        80 => Some(CC::AmpEGInverted(cc_value)),
        85 => Some(CC::FilterEGAttackTime(cc_value)),
        86 => Some(CC::FilterEGDecayTime(cc_value)),
        87 => Some(CC::FilterEGSustainLevel(cc_value)),
        88 => Some(CC::FilterEGReleaseTime(cc_value)),
        89 => Some(CC::FilterEGInverted(cc_value)),
        90 => Some(CC::FilterEGAmount(cc_value)),
        91 => Some(CC::KeyTrackingAmount(cc_value)),
        102 => Some(CC::LFO1Frequency(cc_value)),
        103 => Some(CC::LFO1CenterValue(cc_value)),
        104 => Some(CC::LFO1Range(cc_value)),
        105 => Some(CC::LFO1WaveShape(cc_value)),
        106 => Some(CC::LFO1Phase(cc_value)),
        107 => Some(CC::LFO1Reset),
        108 => Some(CC::FilterModLFOFrequency(cc_value)),
        109 => Some(CC::FilterModLFOAmount(cc_value)),
        110 => Some(CC::FilterModLFOWaveShape(cc_value)),
        111 => Some(CC::FilterModLFOPhase(cc_value)),
        112 => Some(CC::FilterModLFOReset),
        123 => Some(CC::AllNotesOff),
        _ => None,
    }
}