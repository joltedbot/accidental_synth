stages:
- validate
- test
- security
- quality


rust-validation:
  stage: validate
  image: rust:latest
  cache:
    key: rust-cache-$CI_COMMIT_REF_SLUG
    paths:
      - target/
      - ~/.cargo/registry/
      - ~/.cargo/git/
  script:
    - rustup component add clippy pants
    - cargo pants --dev
    - cargo clippy -- -D warnings
  allow_failure: true


sast:
  stage: test
include:
- template: Security/SAST.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/Dependency-Scanning.gitlab-ci.yml

semgrep:
  stage: security
  image: semgrep/semgrep
  script: semgrep ci --code
  variables:
    SEMGREP_APP_TOKEN: "$SEMGREP_APP_TOKEN"

sonarcloud:
  stage: quality
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner -Dsonar.organization="$ORGANIZATION" -Dsonar.projectKey="$PROJECTKEY"
  variables:
    SONAR_HOST_URL: "$SONAR_HOST_URL"
    SONAR_TOKEN: "$SONAR_TOKEN"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    GIT_DEPTH: "0" 

variables:
  SECRET_DETECTION_ENABLED: 'true'