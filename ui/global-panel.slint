import { Panel, VerticalSpacer, SectionLabel, CenteredParameterSlider, PanelLabel, HorizontalSpacer, ComponentLabel, MixerLevel, MixerBalance,
MixerMute, VerticalIntSlider,
ToggleSwitch, HorizontalParameterSlider, IntSpinBox } from "components.slint";
import { Theme } from "theme.slint";
import { Constant } from "constants.slint";
import { VerticalSlider, HorzontalSlider, BalanceSlider } from "custom-widgets.slint";
import { ComboBox } from "std-widgets.slint";



export component MixerStrip inherits VerticalLayout {
    in-out property <string> label;
    in property <float> minimum: 0.0;
    in property <float> maximum: 100.0;
    in property <float> default-value: 0.0;
    callback mixer-level-update(float);
    callback mixer-balance-update(float);
    callback mixer_mute_update(bool);

    SectionLabel {
        label: label;
    }

    HorizontalSpacer { }

    VerticalLayout {
        padding: Theme.global-panel-padding;
        spacing: Theme.global-panel-spacing;
        alignment: space-between;

        MixerBalance {
            mixer-balance-update(value) => {
                root.mixer-balance-update(value);
            }
        }

        MixerLevel {
            minimum: minimum;
            maximum: maximum;
            default-value: default-value;
            slider-height: 100px;

            mixer-level-update(value) => {
                root.mixer-level-update(value);
            }
        }

        MixerMute {
            mixer_mute_update(is_muted) => {
                root.mixer_mute_update(is_muted);
            }
         }
    }
}

export component OutputMixer inherits VerticalLayout {
    in property <float> level-minimum: Constant.SILENCE_LEVEL_DBFS;
    in property <float> level-maximum: Constant.MAX_OUTPUT_LEVEL_DBFS;
    in property <float> default-level: Constant.DEFAULT_OUTPUT_LEVEL_DBFS;

    callback output-level-update(float);
    callback output-balance-update(float);

    output := MixerStrip {
        label: Theme.output-mixer-label;
        minimum: level-minimum;
        maximum: level-maximum;
        default-value: default-level;
    }
}

export component OscillatorMixer inherits VerticalLayout {
    in property <float> level-minimum: Constant.SILENCE_LEVEL_DBFS;
    in property <float> level-maximum: Constant.MAX_OUTPUT_LEVEL_DBFS;


    HorizontalLayout {
        MixerStrip {
            label: Theme.osc-mixer-title-1;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-maximum;
        }

        VerticalSpacer { }

        MixerStrip {
            label: Theme.osc-mixer-title-2;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-maximum;
        }

        VerticalSpacer { }

        MixerStrip {
            label: Theme.osc-mixer-title-3;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-maximum;
        }

        VerticalSpacer { }

        MixerStrip {
            label: Theme.osc-mixer-title-sub;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-minimum;
        }

        VerticalSpacer { }
    }
}

export component GlobalPanel inherits Panel {
    height: Theme.global-panel-height;

    HorizontalLayout {
        padding: Theme.global-panel-padding;
        spacing: Theme.global-panel-spacing;
        alignment: start;

        VerticalLayout {
            alignment: start;
            PanelLabel {
                label: Theme.osc-mixer-label;
            }

        VerticalLayout {
            alignment: start;

                HorizontalLayout {

                    VerticalSpacer {}

                    outout-mixer := OutputMixer {
                        output-level-update(value) => {
                        }
                    }

                    VerticalSpacer { }
                    VerticalSpacer { }

                    oscillator-mixer := OscillatorMixer { }
                }
                }
            }
        
        VerticalSpacer {}

        VerticalLayout {
            alignment: start;

            PanelLabel {
                label: "Oscillators";
            }

            VerticalLayout {
                padding: Theme.global-panel-padding;
                spacing: Theme.global-panel-spacing;
                alignment: start;

                ToggleSwitch {
                    label: "Hard Sync";
                }

                ToggleSwitch {
                    label: "Key Sync";
                }

                HorizontalSpacer {}

                SectionLabel {
                    label: "Portamento";
                }

                ToggleSwitch {
                    label: "Enabled";
                }

                HorizontalParameterSlider {
                    label: "Time";
                    value-postfix: "ms";
                    default-value: 0;
                    minimum: 0;
                    maximum: 100;
                }

            }
        }

        VerticalSpacer {}
        
        VerticalLayout {
            alignment: start;

            PanelLabel {
                label: "Keyboard";
            }

            VerticalLayout {
                padding: Theme.global-panel-padding;
                spacing: Theme.global-panel-spacing;
                alignment: start;

                IntSpinBox {
                    width: 100px;
                    label: "Pitch Bend";
                    minimum: 2;
                    maximum: 12;
                    default-value: 12;
                    step: 1;
                }
                
                HorizontalSpacer {}

                CenteredParameterSlider {
                    width: 100px;
                    label: "Velocity Curve";
                    show-value: false;
                    default-value: 0;
                    minimum: -1;
                    maximum: 1;
                }

                HorizontalSpacer {}

            }    
        }
        VerticalSpacer {}    
    }
}
