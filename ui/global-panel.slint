import { Panel, VerticalSpacer, SectionLabel, HorizontalSpacer, ComponentLabel, MixerLevel, MixerBalance, MixerMute } from "components.slint";
import { Theme } from "theme.slint";
import { Constant } from "constants.slint";
import { VerticalSlider, HorzontalSlider } from "custom-widgets.slint";
import { Switch } from "std-widgets.slint";


export component OutputMixer inherits VerticalLayout {
    in property <float> level-minimum: Constant.SILENCE_LEVEL_DBFS;
    in property <float> level-maximum: Constant.MAX_OUTPUT_LEVEL_DBFS;
    in property <float> default-level: Constant.DEFAULT_OUTPUT_LEVEL_DBFS;

    callback output-level-update(float);
    callback output-balance-update(float);

    output := VerticalLayout {
        SectionLabel {
            label: Theme.output-mixer-label;
        }

        HorizontalSpacer { }

        MixerBalance {
            mixer-balance-update(value) => {
                output-balance-update(value);
            }
        }

        MixerLevel {
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: default-level;
            mixer-level-update(value) => {
                output-level-update(value);
            }
        }
    }
}

export component OscillatorMixerStrip inherits VerticalLayout {
    in-out property <string> label;
    in property <float> minimum: 0.0;
    in property <float> maximum: 100.0;
    in property <float> default-value: 0.0;

    SectionLabel {
        label: label;
    }

    HorizontalSpacer { }

    HorizontalLayout {
        MixerLevel {
            minimum: minimum;
            maximum: maximum;
            default-value: default-value;
        }

        VerticalLayout {
            alignment: start;

            MixerBalance { }

            Rectangle {
                height: 20px;
            }

            MixerMute { }
        }
    }
}

export component OscillatorMixer inherits VerticalLayout {
    SectionLabel {
        label: Theme.osc-mixer-label;
    }

    HorizontalSpacer { }

    HorizontalLayout {

        OscillatorMixerStrip {
            label: Theme.osc-mixer-title-1;
            minimum: 0;
            maximum: 100;
            default-value: 100;
        }

        VerticalSpacer { }

        OscillatorMixerStrip {
            label: Theme.osc-mixer-title-2;
            minimum: 0;
            maximum: 100;
            default-value: 100;
        }

        VerticalSpacer { }

        OscillatorMixerStrip {
            label: Theme.osc-mixer-title-3;
            minimum: 0;
            maximum: 100;
            default-value: 100;
        }

        VerticalSpacer { }

        OscillatorMixerStrip {
            label: Theme.osc-mixer-title-sub;
            minimum: 0;
            maximum: 100;
            default-value: 0;
        }
    }
}

export component GlobalPanel inherits Panel {
    height: Theme.global-panel-height;

    HorizontalLayout {
        padding: Theme.global-panel-padding;
        spacing: Theme.global-panel-spacing;

        outout-mixer := OutputMixer {
            output-level-update(value) => {
            }
         }

        VerticalSpacer { }

        oscillator-mixer := OscillatorMixer { }

        VerticalSpacer { }
    }
}
