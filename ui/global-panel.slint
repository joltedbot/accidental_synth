import { Panel, VerticalSpacer, SectionLabel, CenteredParameterSlider, PanelLabel, HorizontalSpacer, ComponentLabel, MixerLevel, MixerBalance,
MixerMute, VerticalIntSlider,
ToggleSwitch, HorizontalParameterSlider, IntSpinBox } from "components.slint";
import { Theme } from "theme.slint";
import { Constant } from "constants.slint";
import { VerticalSlider, HorzontalSlider, BalanceSlider } from "custom-widgets.slint";
import { ComboBox, TextEdit } from "std-widgets.slint";

export component MixerStrip inherits VerticalLayout {
    in-out property <string> label;
    in property <float> minimum: 0.0;
    in property <float> maximum: 100.0;
    in property <float> default-value: 0.0;
    callback mixer-level-update(float);
    callback mixer-balance-update(float);
    callback mixer_mute_update(bool);

    SectionLabel {
        label: label;
    }

    HorizontalSpacer { }

    VerticalLayout {
        padding: Theme.global-panel-padding;
        spacing: Theme.global-panel-spacing;
        alignment: space-between;

        MixerBalance {
            mixer-balance-update(value) => {
                root.mixer-balance-update(value);
            }
        }

        MixerLevel {
            minimum: minimum;
            maximum: maximum;
            default-value: default-value;
            slider-height: 100px;

            mixer-level-update(value) => {
                root.mixer-level-update(value);
            }
        }

        MixerMute {
            mixer_mute_update(is_muted) => {
                root.mixer_mute_update(is_muted);
            }
        }
    }
}

export component OutputMixer inherits VerticalLayout {
    in property <float> level-minimum: Constant.SILENCE_LEVEL_DBFS;
    in property <float> level-maximum: Constant.MAX_OUTPUT_LEVEL_DBFS;
    in property <float> default-level: Constant.DEFAULT_OUTPUT_LEVEL_DBFS;

    callback output-level-update(float);
    callback output-balance-update(float);

    output := MixerStrip {
        label: Theme.output-mixer-label;
        minimum: level-minimum;
        maximum: level-maximum;
        default-value: default-level;
    }
}

export component OscillatorMixer inherits VerticalLayout {
    in property <float> level-minimum: Constant.SILENCE_LEVEL_DBFS;
    in property <float> level-maximum: Constant.MAX_OUTPUT_LEVEL_DBFS;

    HorizontalLayout {
        MixerStrip {
            label: Theme.osc-mixer-title-1;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-maximum;
        }

        VerticalSpacer { }

        MixerStrip {
            label: Theme.osc-mixer-title-2;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-maximum;
        }

        VerticalSpacer { }

        MixerStrip {
            label: Theme.osc-mixer-title-3;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-maximum;
        }

        VerticalSpacer { }

        MixerStrip {
            label: Theme.osc-mixer-title-sub;
            minimum: level-minimum;
            maximum: level-maximum;
            default-value: level-minimum;
        }

        VerticalSpacer { }
    }
}

export component MixerSection inherits VerticalLayout {
    alignment: start;
    padding-top: Theme.global-panel-padding;


    PanelLabel {
        label: Theme.osc-mixer-label;
    }

    VerticalLayout {

        alignment: start;

        HorizontalLayout {

            VerticalSpacer {  }

            outout-mixer := OutputMixer {
                output-level-update(value) => {
                }
            }

            VerticalSpacer { }

            VerticalSpacer { }

            oscillator-mixer := OscillatorMixer { }
        }
    }
}

export component OscillatorSection inherits VerticalLayout {
    alignment: start;
    padding-top: Theme.global-panel-padding;


    PanelLabel {
        label: Theme.osc-options-section-label;
    }
    
    HorizontalLayout {
        alignment: start;
        
        VerticalLayout {
            padding: Theme.global-panel-padding;
            spacing: Theme.global-panel-spacing;
            alignment: space-between;
    
            HorizontalLayout {
                padding: Theme.global-panel-padding;
                spacing: Theme.global-panel-spacing;
                alignment: space-around;
    
                ToggleSwitch {
                    label: Theme.osc-options-portamento-label;
                }
    
                HorizontalParameterSlider {
                    label: Theme.osc-options-portamento-time-label;
                    value-postfix: Theme.osc-options-portamento-time-postfix;
                    default-value: 0;
                    minimum: 0;
                    maximum: 100;
                }
            }
    
            HorizontalSpacer { }
    
            HorizontalLayout {
                alignment: start;
                padding: Theme.global-panel-padding;
                spacing: Theme.global-panel-spacing;
    
                VerticalLayout {
                    spacing: 20px;
                    alignment: center;
    
                    IntSpinBox {
                        label: Theme.osc-options-pitch-bend-range;
                        minimum: 2;
                        maximum: 12;
                        default-value: 12;
                        step: 1;
                    }
    
                    CenteredParameterSlider {
                        label: Theme.osc-options-velocity-curve;
                        show-value: false;
                        default-value: 0;
                        minimum: -1;
                        maximum: 1;
                    }
                }
    
                VerticalLayout {
                    spacing: 20px;
                    alignment: center;
    
                    ToggleSwitch {
                        label: Theme.osc-options-hard-sync;
                    }
    
                    ToggleSwitch {
                        label: Theme.osc-options-key-sync;
                    }
                }
            }
            HorizontalSpacer { }

        }
        VerticalSpacer {}
    }
}

export component SpacerSection inherits VerticalLayout {
    alignment: start;
    padding-top: Theme.global-panel-padding;

    PanelLabel {
        label: "Scratch Notes";
    }

    HorizontalLayout {
        VerticalLayout {
            padding: 10px;
            TextEdit {
                height: 250px;
                width: 160px;
            }
        }


    }
}

export component GlobalPanel inherits Panel {
    height: Theme.global-panel-height;

    HorizontalLayout {
        alignment: start;

        mixer-section := MixerSection { }

        osc-section := OscillatorSection { }

        spacer-section := SpacerSection {

         }


    }
}
